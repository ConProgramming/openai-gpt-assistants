{
  "version": 3,
  "sources": ["../src/assistant.ts"],
  "sourcesContent": ["import { OpenAI } from \"openai/index.mjs\";\n\nimport { Context } from \"./index.js\";\nimport { createWrappedPage, StatefulObject } from \"./utils.js\";\n\nexport interface AssistantEvents {}\n\nexport class Assistant extends StatefulObject<\n  Assistant,\n  OpenAI.Beta.Assistant,\n  AssistantEvents\n> {\n  constructor(ctx: Context, id: string) {\n    super(ctx, Assistant.object, id);\n  }\n\n  static readonly object = \"assistant\";\n  readonly object = Assistant.object;\n  get name() {\n    return this.wrappedValue.name;\n  }\n  get description() {\n    return this.wrappedValue.description;\n  }\n  get instructions() {\n    return this.wrappedValue.instructions;\n  }\n  get model() {\n    return this.wrappedValue.model;\n  }\n  get fileIds() {\n    return this.wrappedValue.file_ids;\n  }\n  get createdAt() {\n    return new Date(this.wrappedValue.created_at * 1000);\n  }\n  get metadata() {\n    return this.wrappedValue.metadata;\n  }\n  get tools() {\n    return this.wrappedValue.tools;\n  }\n\n  /**\n   * Create an assistant with a model and instructions.\n   */\n  static async create(\n    ctx: Context,\n    params: OpenAI.Beta.AssistantCreateParams,\n    options: OpenAI.RequestOptions = {},\n  ) {\n    const assistant = await ctx.client.beta.assistants.create(\n      params,\n      ctx._opts(options),\n    );\n    ctx.cache.set(this.object, assistant.id, assistant);\n    ctx.cache._emit(\"created\", this.object, assistant.id, assistant);\n    const created = new Assistant(ctx, assistant.id);\n    return created;\n  }\n\n  /** Constructs a new assistant object by fetching by id or returning from cache if already present. */\n  static async load(ctx: Context, id: string, options?: OpenAI.RequestOptions) {\n    const assistant = new Assistant(ctx, id);\n    await assistant.load(options);\n    return assistant;\n  }\n\n  /**\n   * Deletes this assistant.\n   */\n  async delete(options: OpenAI.RequestOptions = {}) {\n    const deleted = await this._ctx.client.beta.assistants.del(\n      this.wrappedValue.id,\n      this._ctx._opts(options),\n    );\n    if (deleted.deleted) {\n      this._cache._emit(\"deleted\", this.object, this.wrappedValue.id);\n      this._cache.remove(this.object, this.wrappedValue.id);\n    }\n    return deleted;\n  }\n\n  /**\n   * Returns a list of assistants.\n   */\n  static async list(ctx: Context, options: OpenAI.RequestOptions = {}) {\n    const page = await ctx.client.beta.assistants.list(ctx._opts(options));\n    const wrapped = createWrappedPage(\n      ctx,\n      page,\n      (ctx, id) => new Assistant(ctx, id),\n    );\n    return wrapped;\n  }\n\n  /**\n   * Modifies this assistant.\n   */\n  async update(\n    params: OpenAI.Beta.AssistantUpdateParams,\n    options: OpenAI.RequestOptions = {},\n  ) {\n    const assistant = await this._ctx.client.beta.assistants.update(\n      this.wrappedValue.id,\n      params,\n      this._ctx._opts(options),\n    );\n    this._cache.set(this.object, assistant.id, assistant);\n    return this;\n  }\n}\n"],
  "mappings": "AAGA,SAAS,mBAAmB,sBAAsB;AAI3C,MAAM,kBAAkB,eAI7B;AAAA,EACA,YAAY,KAAc,IAAY;AACpC,UAAM,KAAK,UAAU,QAAQ,EAAE;AAAA,EACjC;AAAA,EAEA,OAAgB,SAAS;AAAA,EAChB,SAAS,UAAU;AAAA,EAC5B,IAAI,OAAO;AACT,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,IAAI,YAAY;AACd,WAAO,IAAI,KAAK,KAAK,aAAa,aAAa,GAAI;AAAA,EACrD;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,OACX,KACA,QACA,UAAiC,CAAC,GAClC;AACA,UAAM,YAAY,MAAM,IAAI,OAAO,KAAK,WAAW;AAAA,MACjD;AAAA,MACA,IAAI,MAAM,OAAO;AAAA,IACnB;AACA,QAAI,MAAM,IAAI,KAAK,QAAQ,UAAU,IAAI,SAAS;AAClD,QAAI,MAAM,MAAM,WAAW,KAAK,QAAQ,UAAU,IAAI,SAAS;AAC/D,UAAM,UAAU,IAAI,UAAU,KAAK,UAAU,EAAE;AAC/C,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,aAAa,KAAK,KAAc,IAAY,SAAiC;AAC3E,UAAM,YAAY,IAAI,UAAU,KAAK,EAAE;AACvC,UAAM,UAAU,KAAK,OAAO;AAC5B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,UAAiC,CAAC,GAAG;AAChD,UAAM,UAAU,MAAM,KAAK,KAAK,OAAO,KAAK,WAAW;AAAA,MACrD,KAAK,aAAa;AAAA,MAClB,KAAK,KAAK,MAAM,OAAO;AAAA,IACzB;AACA,QAAI,QAAQ,SAAS;AACnB,WAAK,OAAO,MAAM,WAAW,KAAK,QAAQ,KAAK,aAAa,EAAE;AAC9D,WAAK,OAAO,OAAO,KAAK,QAAQ,KAAK,aAAa,EAAE;AAAA,IACtD;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,KAAK,KAAc,UAAiC,CAAC,GAAG;AACnE,UAAM,OAAO,MAAM,IAAI,OAAO,KAAK,WAAW,KAAK,IAAI,MAAM,OAAO,CAAC;AACrE,UAAM,UAAU;AAAA,MACd;AAAA,MACA;AAAA,MACA,CAACA,MAAK,OAAO,IAAI,UAAUA,MAAK,EAAE;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OACJ,QACA,UAAiC,CAAC,GAClC;AACA,UAAM,YAAY,MAAM,KAAK,KAAK,OAAO,KAAK,WAAW;AAAA,MACvD,KAAK,aAAa;AAAA,MAClB;AAAA,MACA,KAAK,KAAK,MAAM,OAAO;AAAA,IACzB;AACA,SAAK,OAAO,IAAI,KAAK,QAAQ,UAAU,IAAI,SAAS;AACpD,WAAO;AAAA,EACT;AACF;",
  "names": ["ctx"]
}
